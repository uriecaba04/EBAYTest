
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 */
package ebay.com;

// Generated by Selenium IDE		
import org.testng.annotations.Test;	
import org.testng.annotations.BeforeTest;	
import org.testng.annotations.AfterTest;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.JavascriptExecutor;
import java.util.concurrent.TimeUnit;
/**
 *
 * @author s_camargoua
 */
public class EbayTestNGTest {
    private static WebDriver driver;
    private  static JavascriptExecutor  js;
    
    
    @BeforeTest
    public void beforeTest() {	
        DesiredCapabilities capabilities = DesiredCapabilities.chrome();
        capabilities.setCapability("marionette", true); 
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\s_camargoua\\Documents\\NetBeansProjects\\EBAYTest\\driverchroome\\chromedriver_win32_79.0\\chromedriver.exe");
         driver = new ChromeDriver(); 
        driver.manage().timeouts().implicitlyWait(30,TimeUnit.SECONDS) ;
    }		
    @AfterTest
    public void afterTest() {
            driver.quit();			
    }	
    
    @Test
  public static void tC001SearchSoes() {
    driver.get("https://www.ebay.com/");
    driver.manage().window().setSize(new Dimension(1374, 732));
    driver.findElement(By.id("gh-ac")).click();
    driver.findElement(By.id("gh-ac")).sendKeys("zapatos");
    driver.findElement(By.id("gh-btn")).click();
    
  }
  @Test
  public static void tC002SelectBrandPUMA() throws InterruptedException { 
  
    tC001SearchSoes();
    
    Thread.sleep(5000);
    {
      WebElement element = driver.findElement(By.cssSelector(".x-searchable-list__fieldset > .x-refine__main__list--value:nth-child(7) .x-refine__select__svg"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
       Thread.sleep(5000);
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
       Thread.sleep(5000);
    {
      WebElement element = driver.findElement(By.cssSelector(".x-searchable-list__fieldset > .x-refine__main__list--value:nth-child(7) .x-refine__select__svg > .cbx"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".x-searchable-list__fieldset > .x-refine__main__list--value:nth-child(7) .x-refine__select__svg > .cbx")).click();
   
       
    
  }
  @Test
  public static void tC003SelectSize10() throws InterruptedException {
      tC002SelectBrandPUMA();
   
    Thread.sleep(5000);
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    Thread.sleep(5000);
     {
      WebElement element = driver.findElement(By.cssSelector("#x-refine__group_1__0 .x-refine__main__list--value:nth-child(5) .x-refine__select__svg > .cbx"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
       element.click();
    }
    Thread.sleep(5000);
    
    {
      WebElement element = driver.findElement(By.cssSelector("#mainContent > div.s-answer-region.s-answer-region-center-top > div > div.clearfix.srp-controls__row-2 > div > div.srp-controls__control.srp-controls__count > h1 > span:nth-child(1)"));
      System.out.println("The amount of elements of the brand PUMA and size 10 is of: "+element.getAttribute("textContent"));
    } 
   
  }
  @Test
  public static void tC004OrderAscendant() throws InterruptedException{
   tC003SelectSize10();

    Thread.sleep(5000);

    {
       WebElement element = driver.findElement(By.cssSelector("#w9 > button"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element, 0, 0);
         builder.doubleClick(element).perform();
    }
    Thread.sleep(5000);
    {
        WebElement element;
	element= driver.findElement(By.cssSelector("#w9 > div > div > ul > li:nth-child(4) >a"));
        driver.findElement(By.cssSelector("#w9 > button")).click();
         Actions builder = new Actions(driver);
         builder.moveToElement(element);
     }
    
 
    
   driver.findElement(By.cssSelector("#w9 > div > div > ul > li:nth-child(4) >a")).click();
    
   
  }

  
  @Test
  public static void tC005AssertOrder() throws InterruptedException {
      
    int ItemsNumber=5;
    for(int i=1; i <= ItemsNumber; i++){
        tC004OrderAscendant();
        driver.findElement(By.xpath("/html/body/div[4]/div[5]/div[2]/div[1]/div[2]/ul/li["+i+"]")).click();
        
        Thread.sleep(5000);
        {
          WebElement element = driver.findElement(By.id("vi-see-allitms"));
          Actions builder = new Actions(driver);
          builder.moveToElement(element).perform();
        }
        Thread.sleep(5000);
        {
          WebElement element = driver.findElement(By.tagName("body"));
          Actions builder = new Actions(driver);
          builder.moveToElement(element, 0, 0).perform();
        }
        Thread.sleep(5000);
       
        int excepcions=1;
        if(i==1){
            excepcions=2;
        }else{
            excepcions=1;
         }
        if(i !=5){
            driver.findElement(By.id("msku-sel-"+excepcions)).click();
            {
              WebElement dropdown = driver.findElement(By.id("msku-sel-"+excepcions));
              dropdown.findElement(By.id("msku-opt-2")).click();
            }
            driver.findElement(By.id("msku-sel-"+excepcions)).click();
        }
        driver.findElement(By.id("isCartBtn_btn")).click();
    }
    
     System.out.println("Test Case  tC005AssertOrder OK ");
  }
  @Test
  public static void tC006PrintProductsandprices() throws InterruptedException {
    tC004OrderAscendant();
    int numberProductsToPrint=5;
    Thread.sleep(5000);
    for(int i=1; i<= numberProductsToPrint; i++){
      WebElement elementname = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > a > h3"));
      WebElement elementprice = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > div.s-item__details.clearfix > div:nth-child(1) > span.s-item__price"));
      
      System.out.println("Product number :"+i+elementname.getAttribute("textContent")+" Price: "+elementprice.getAttribute("textContent"));
    
    }
  }
  
  @Test
  public static void tC007PrintOrderProductsByNameAsc() throws InterruptedException {
     tC004OrderAscendant();
      System.out.println("Ordenando e imprimiendo productos por nombre"); 
      
      int numberProductsToPrint=5;
      String ProductName[];
      ProductName = new String[numberProductsToPrint];
    Thread.sleep(5000);
    for(int x=0; x< numberProductsToPrint; x++){
      int i= x+1;
      WebElement elementname = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > a > h3"));
       ProductName[x]=elementname.getAttribute("textContent");     
    }
    ordenarString(ProductName);
    System.out.println("Productos ordenados: ");
    
    for(int i=0;i<ProductName.length;i++){
            System.out.println(ProductName[i]);
     } 
  }
  
  public static void ordenarString(String lista[]){
 
        //Usamos un bucle anidado
                for(int i=0;i<(lista.length-1);i++){
                    for(int j=i+1;j<lista.length;j++){
                        if(lista[i].compareToIgnoreCase(lista[j])>0){
                            //Intercambiamos valores
                            String variableauxiliar=lista[i];
                            lista[i]=lista[j];
                            lista[j]=variableauxiliar;
 
                        }
                    }
                }
    }
  
  
  
  @Test
  public static void tC008PrintOrderProductsByPriceDesc() throws InterruptedException {
   tC004OrderAscendant();
      System.out.println("Ordenando e imprimiendo productos por nombre"); 
      
      int numberProductsToPrint=5;
      String ProductPrice[];
      ProductPrice = new String[numberProductsToPrint];
    Thread.sleep(5000);
    for(int x=0; x< numberProductsToPrint; x++){
      int i= x+1;
       WebElement elementname = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > a > h3"));    
       WebElement elementprice = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > div.s-item__details.clearfix > div:nth-child(1) > span.s-item__price"));
       ProductPrice[x]=elementprice.getAttribute("textContent")+"Precio: "+elementname.getAttribute("textContent");      
    }
    ordenarString(ProductPrice);
    System.out.println("Productos ordenados por precio: ");
    
    for(int i=0;i<ProductPrice.length;i++){
            System.out.println(ProductPrice[i]);
     }
  }
}
