/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.ebaytest;

//import java.net.MalformedURLException;
//import java.net.URL;
//import java.util.HashMap;
//import java.util.Map;
//
//
//// Generated by Selenium IDE
//import org.junit.Test;
//import org.junit.Before;
//import org.junit.After;
//import static org.junit.Assert.*;
//import static org.hamcrest.CoreMatchers.is;
//import static org.hamcrest.core.IsNot.not;
//import org.openqa.selenium.By;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.remote.RemoteWebDriver;
//import org.openqa.selenium.remote.DesiredCapabilities;
//import org.openqa.selenium.Dimension;
//import org.openqa.selenium.WebElement;
//import org.openqa.selenium.interactions.Actions;
//import org.openqa.selenium.support.ui.ExpectedConditions;
//import org.openqa.selenium.support.ui.WebDriverWait;
//import org.openqa.selenium.JavascriptExecutor;
//import org.openqa.selenium.Alert;
//import org.openqa.selenium.Keys;
//import java.util.*;
//import java.util.concurrent.TimeUnit;
//import java.net.MalformedURLException;
//import java.net.URL;
//import java.util.logging.Level;
//import java.util.logging.Logger;
//import java.util.Arrays; 

public class EBAYTest {
//  private static WebDriver driver;
//  private Map<String, Object> vars;
// private  static JavascriptExecutor  js;
  
 //private static JavascriptExecutor js = (JavascriptExecutor) driver; 
  
    public static void main(String args[]) throws InterruptedException {
//        DesiredCapabilities capabilities = DesiredCapabilities.chrome();
//        capabilities.setCapability("marionette", true); 
//        System.setProperty("webdriver.chrome.driver", "driverchroome/chromedriver_win32_79.0/chromedriver.exe");
//        
//        driver = new ChromeDriver();  DesiredCapabilities capabilities = DesiredCapabilities.chrome();
//        capabilities.setCapability("marionette", true); 
//        System.setProperty("webdriver.chrome.driver", "driverchroome/chromedriver_win32_79.0/chromedriver.exe");
//        

//        driver.manage().timeouts().implicitlyWait(30,TimeUnit.SECONDS) ;
//        tC001SearchSoes(true);
//        tC002SelectBrandPUMA(true);
//        tC003SelectSize10(true);
//       tC004OrderAscendant(true);
//       tC005AssertOrder();
//       tC006PrintProductsandprices();
//       tC007PrintOrderProductsByNameAsc();
//       tC008PrintOrderProductsByPriceDesc();
    }
//  @Before
//  public void setUp() throws MalformedURLException {
//    driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.chrome());
//    driver.get("http://www.google.com");
//    js = (JavascriptExecutor) driver;
//    vars = new HashMap<String, Object>();
//  }
//  @After
//  public void tearDown() {
//    driver.quit();
//  }
//  
//@Test
//  public static void tC001SearchSoes(Boolean printStatus) {
//      Boolean estatuspt=printStatus;
//    driver.get("https://www.ebay.com/");
//    driver.manage().window().setSize(new Dimension(1374, 732));
//    driver.findElement(By.id("gh-ac")).click();
//    driver.findElement(By.id("gh-ac")).sendKeys("zapatos");
//    driver.findElement(By.id("gh-btn")).click();
//    if(estatuspt){
//      System.out.println("Test Case  tC001SearchSoes OK ");
//    }
//  }
//  @Test
//  public static void tC002SelectBrandPUMA(Boolean printStatus) throws InterruptedException { 
//    Boolean estatuspt=printStatus;
//    tC001SearchSoes(false);
//    
//    Thread.sleep(5000);
//    {
//      WebElement element = driver.findElement(By.cssSelector(".x-searchable-list__fieldset > .x-refine__main__list--value:nth-child(7) .x-refine__select__svg"));
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element).perform();
//    }
//       Thread.sleep(5000);
//    {
//      WebElement element = driver.findElement(By.tagName("body"));
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element, 0, 0).perform();
//    }
//       Thread.sleep(5000);
//    {
//      WebElement element = driver.findElement(By.cssSelector(".x-searchable-list__fieldset > .x-refine__main__list--value:nth-child(7) .x-refine__select__svg > .cbx"));
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element).perform();
//    }
//    driver.findElement(By.cssSelector(".x-searchable-list__fieldset > .x-refine__main__list--value:nth-child(7) .x-refine__select__svg > .cbx")).click();
//    if(estatuspt){
//       System.out.println("Test Case  tC002SelectBrandPUMA OK ");
//    }
//  }
//  @Test
//  public static void tC003SelectSize10(Boolean printStatus) throws InterruptedException {
//      tC002SelectBrandPUMA(false);
//    Boolean estatuspt=printStatus;
//    Thread.sleep(5000);
//    {
//      WebElement element = driver.findElement(By.tagName("body"));
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element, 0, 0).perform();
//    }
//    Thread.sleep(5000);
//     {
//      WebElement element = driver.findElement(By.cssSelector("#x-refine__group_1__0 .x-refine__main__list--value:nth-child(5) .x-refine__select__svg > .cbx"));
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element).perform();
//       element.click();
//    }
//    Thread.sleep(5000);
//    
//    {
//      WebElement element = driver.findElement(By.cssSelector("#mainContent > div.s-answer-region.s-answer-region-center-top > div > div.clearfix.srp-controls__row-2 > div > div.srp-controls__control.srp-controls__count > h1 > span:nth-child(1)"));
//      System.out.println("The amount of elements of the brand PUMA and size 10 is of: "+element.getAttribute("textContent"));
//    }
//    
//    if(estatuspt){
//       System.out.println("Test Case  tC003SelectSize10 OK ");
//    }
//   
//  }
//  @Test
//  public static void tC004OrderAscendant(Boolean printStatus) throws InterruptedException{
//   tC003SelectSize10(false);
//    Boolean estatuspt=printStatus;
//    Thread.sleep(5000);
//
//    {
//       WebElement element = driver.findElement(By.cssSelector("#w9 > button"));
//        Actions builder = new Actions(driver);
//        builder.moveToElement(element, 0, 0);
//         builder.doubleClick(element).perform();
//    }
//    Thread.sleep(5000);
//    {
//        WebElement element;
//	element= driver.findElement(By.cssSelector("#w9 > div > div > ul > li:nth-child(4) >a"));
//        //driver.findElement(By.cssSelector("#w9 > button")).click();
//         Actions builder = new Actions(driver);
//         builder.moveToElement(element);
//     }
//    
// 
//    
//   driver.findElement(By.cssSelector("#w9 > div > div > ul > li:nth-child(4) >a")).click();
//   //ShowOption(element.isDisplayed(), element);
//     if(estatuspt){
//       System.out.println("Test Case  tC004OrderAscendant OK ");
//    }
//   
//  }
//
//  
//  @Test
//  public static void tC005AssertOrder() throws InterruptedException {
//      
//    int ItemsNumber=5;
//    for(int i=1; i <= ItemsNumber; i++){
//        tC004OrderAscendant(false);
//        driver.findElement(By.xpath("/html/body/div[4]/div[5]/div[2]/div[1]/div[2]/ul/li["+i+"]")).click();
//        
//        Thread.sleep(5000);
//        {
//          WebElement element = driver.findElement(By.id("vi-see-allitms"));
//          Actions builder = new Actions(driver);
//          builder.moveToElement(element).perform();
//        }
//        Thread.sleep(5000);
//        {
//          WebElement element = driver.findElement(By.tagName("body"));
//          Actions builder = new Actions(driver);
//          builder.moveToElement(element, 0, 0).perform();
//        }
//        Thread.sleep(5000);
//       
//        int excepcions=1;
//        if(i==1){
//            excepcions=2;
//        }else{
//            excepcions=1;
//         }
//        if(i !=5){
//            driver.findElement(By.id("msku-sel-"+excepcions)).click();
//            {
//              WebElement dropdown = driver.findElement(By.id("msku-sel-"+excepcions));
//              dropdown.findElement(By.id("msku-opt-2")).click();
//            }
//            driver.findElement(By.id("msku-sel-"+excepcions)).click();
//        }
//        driver.findElement(By.id("isCartBtn_btn")).click();
//    }
//    
//     System.out.println("Test Case  tC005AssertOrder OK ");
//  }
//  @Test
//  public static void tC006PrintProductsandprices() throws InterruptedException {
//    tC004OrderAscendant(false);
//    int numberProductsToPrint=5;
//    Thread.sleep(5000);
//    for(int i=1; i<= numberProductsToPrint; i++){
//      WebElement elementname = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > a > h3"));
//      WebElement elementprice = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > div.s-item__details.clearfix > div:nth-child(1) > span.s-item__price"));
//      
//      System.out.println("Product number :"+i+elementname.getAttribute("textContent")+" Price: "+elementprice.getAttribute("textContent"));
//    
//    }
//    System.out.println("Test Case  tC006PrintProductsandprices OK "); 
//  }
//  
//  @Test
//  public static void tC007PrintOrderProductsByNameAsc() throws InterruptedException {
//     tC004OrderAscendant(false);
//      System.out.println("Ordenando e imprimiendo productos por nombre"); 
//      
//      int numberProductsToPrint=5;
//      String ProductName[];
//      ProductName = new String[numberProductsToPrint];
//    Thread.sleep(5000);
//    for(int x=0; x< numberProductsToPrint; x++){
//      int i= x+1;
//      WebElement elementname = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > a > h3"));
//       ProductName[x]=elementname.getAttribute("textContent");     
//    }
//    ordenarString(ProductName);
//    System.out.println("Productos ordenados: ");
//    
//    for(int i=0;i<ProductName.length;i++){
//            System.out.println(ProductName[i]);
//     }
//    
//    System.out.println("Test Case  tC007PrintOrderProductsByNameAsc OK "); 
//  }
//  
//  public static void ordenarString(String lista[]){
// 
//        //Usamos un bucle anidado
//                for(int i=0;i<(lista.length-1);i++){
//                    for(int j=i+1;j<lista.length;j++){
//                        if(lista[i].compareToIgnoreCase(lista[j])>0){
//                            //Intercambiamos valores
//                            String variableauxiliar=lista[i];
//                            lista[i]=lista[j];
//                            lista[j]=variableauxiliar;
// 
//                        }
//                    }
//                }
//    }
//  
//  
//  
//  @Test
//  public static void tC008PrintOrderProductsByPriceDesc() throws InterruptedException {
//   tC004OrderAscendant(false);
//      System.out.println("Ordenando e imprimiendo productos por nombre"); 
//      
//      int numberProductsToPrint=5;
//      String ProductPrice[];
//      ProductPrice = new String[numberProductsToPrint];
//    Thread.sleep(5000);
//    for(int x=0; x< numberProductsToPrint; x++){
//      int i= x+1;
//       WebElement elementname = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > a > h3"));    
//       WebElement elementprice = driver.findElement(By.cssSelector("#srp-river-results-listing"+i+" > div > div.s-item__info.clearfix > div.s-item__details.clearfix > div:nth-child(1) > span.s-item__price"));
//       ProductPrice[x]=elementprice.getAttribute("textContent")+"Precio: "+elementname.getAttribute("textContent");      
//    }
//    ordenarString(ProductPrice);
//    System.out.println("Productos ordenados por precio: ");
//    
//    for(int i=0;i<ProductPrice.length;i++){
//            System.out.println(ProductPrice[i]);
//     }
//    
//    System.out.println("Test Case  tC008PrintOrderProductsByPriceDesc OK ");
//  }
}
